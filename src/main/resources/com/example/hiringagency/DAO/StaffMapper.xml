<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "com.example.hiringagency.DAO.StaffMapper">

    <insert id="setAd" parameterType="com.example.hiringagency.domain.entity.JobAdvertisements">
        insert into JobAdvertisements(`serviceType`, `educationRequirement`, `experience`)
        values (#{serviceType}, #{educationRequirement}, #{experience})
    </insert>

    <select id="selectAllAds" resultType="com.example.hiringagency.domain.entity.JobAdvertisements">
        select *
        from JobAdvertisements
    </select>

    <delete id="deleteAd" parameterType="com.example.hiringagency.domain.entity.JobAdvertisements">
        delete from JobAdvertisements
        where jobAdvertisementId = #{jobAdvertisementId}
    </delete>

    <!-- 接下来4个都是为了hire HP-->
    <insert id="addHPAccount" parameterType="com.example.hiringagency.domain.entity.Users">
        insert into Users(`firstName`, `lastName`,`username`, `password`, `firstLogin`, `postalAddress`, `phoneNumber`,`email`,`type`, `isBlocked`, `hourlyRate`)
        values (#{firstName}, #{lastName}, #{username}, #{password}, 0, #{postalAddress}, #{phoneNumber}, #{email}, 3, 0, #{hourlyRate})
    </insert>

    <select id="selectHPInfoById" resultType="com.example.hiringagency.domain.model.Info">
        select firstName, lastName, postalAddress, phoneNumber, email
        from HealthcareJobApplication
        where healthcareJobApplicationId = #{healthcareJobApplicationId}
    </select>

    <select id="selectMaxId" resultType="java.lang.Long">
        select MAX(userId)
        from Users
    </select>

    <update id="updateHPId">
        update HealthcareJobApplication
        set userId = #{userId}
        where healthcareJobApplicationId = #{healthcareJobApplicationId}
    </update>

    <!-- list hired HP -->
    <select id="selectAllHP" resultType="com.example.hiringagency.domain.model.HPDetails">
        select hja.userId, hja.firstName, hja.lastName, u.username, hja.postalAddress, hja.phoneNumber, hja.email, u.hourlyRate, hja.serviceType, hja.gender, hja.dateOfBirth, hja.degree, hja.ssn, hja.educationQualifications, hja.yearsExperience
        from Users u left join HealthcareJobApplication hja on u.userId = hja.userId
        where u.type = 3 and u.isDeleted = 0
    </select>

    <!-- 接下来3个都是为了approve CT-->
    <insert id="addCTAccount" parameterType="com.example.hiringagency.domain.entity.Users">
        insert into Users(`firstName`, `lastName`,`username`, `password`, `firstLogin`, `postalAddress`, `phoneNumber`,`email`,`type`, `isBlocked`)
        values (#{firstName}, #{lastName}, #{username}, #{password}, 0, #{postalAddress}, #{phoneNumber}, #{email}, 2, 0)
    </insert>

    <select id="selectCTInfoById" resultType="com.example.hiringagency.domain.model.Info">
        select firstName, lastName, postalAddress, phoneNumber, email
        from CareTakerRegistration
        where careTakerRegistrationId = #{careTakerRegistrationId}
    </select>

    <update id="updateCTId">
        update CareTakerRegistration
        set userId = #{userId}
        where careTakerRegistrationId = #{careTakerRegistrationId}
    </update>

    <!-- approved CT -->
    <select id="selectAllCT" resultType="com.example.hiringagency.domain.entity.Users">
        select *
        from Users
        where Type = 2 and isDeleted = 0
    </select>

    <select id="selectHPbyRequest" resultType="com.example.hiringagency.domain.entity.HealthcareJobApplication">
        select *
        from HealthcareJobApplication hja left join Users U on U.UserID = hja.UserID
        where hja.active = 0 and hja.serviceType = #{serviceType} and hja.gender = #{genderSpecific} and U.isDeleted = 0
    </select>

    <select id="selectHPbyType" resultType="com.example.hiringagency.domain.entity.HealthcareJobApplication">
        select *
        from HealthcareJobApplication hja left join Users U on U.UserID = hja.UserID
        where hja.active = 0 and hja.serviceType = #{serviceType} and U.isDeleted = 0
    </select>

    <select id="selectAllRequests" resultType="com.example.hiringagency.domain.entity.CareRequests">
        select *
        from CareRequests
        where status = 0
    </select>

    <select id="selectServiceEntries" resultType="com.example.hiringagency.domain.entity.ServiceEntries">
        select *
        from ServiceEntries
        where careRequestId = #{careRequestId}
    </select>

    <select id="selectRequestById" resultType="com.example.hiringagency.domain.entity.CareRequests">
        select *
        from CareRequests
        where careRequestId = #{careRequestId}
    </select>

    <select id="selectEntriesById" resultType="com.example.hiringagency.domain.entity.ServiceEntries">
        select *
        from ServiceEntries
        where serviceEntryId = #{serviceEntryId}
    </select>

    <select id="selectEntriesByHp" resultType="com.example.hiringagency.domain.entity.ServiceEntries">
        select *
        from ServiceEntries
        where hpId = #{userId}
    </select>

    <select id="selectBillingByRequest" resultType="com.example.hiringagency.domain.entity.Billing">
        select *
        from Billing
        where careRequestId = #{careRequestId}
    </select>

    <update id="assignHP" parameterType="com.example.hiringagency.domain.entity.ServiceEntries">
        update ServiceEntries
        set hpId = #{userId}, status = 1
        where serviceEntryId = #{serviceEntryId}
    </update>

    <update id="deAssignHP" parameterType="com.example.hiringagency.domain.entity.ServiceEntries">
        update ServiceEntries
        set hpId = null, Status = 0
        where serviceEntryId = #{serviceEntryId}
    </update>

    <select id="selectMaxServiceId" resultType="java.lang.Long">
        select MAX(serviceId)
        from Billing
    </select>

    <insert id="addBilling" parameterType="com.example.hiringagency.domain.entity.Billing">
        insert into Billing(`careTakerId`, `careRequestId`, `hourlyRate`, `paidAmount`, `amountYetToPay`, `serviceId`)
        values (#{careTakerId}, #{careRequestId}, #{hourlyRate}, 0, 0, #{serviceId})
    </insert>

    <select id="selectBilling" resultType="com.example.hiringagency.domain.model.BillingAccountInfo">
        select U.FirstName "ctfirstName", U.LastName "ctlastName", CR.FirstName "patientFirstName", CR.LastName "patientLastName", B.hourlyRate, B.paidAmount, B.amountYetToPay, B.BillingID, B.ServiceID
        from Billing B left join Users U on U.UserID = B.CareTakerID left join CareRequests CR on CR.CareRequestID = B.CareRequestID
    </select>

    <update id="pay" parameterType="com.example.hiringagency.domain.entity.Billing">
        update Billing
        set paidAmount = #{sum}
        where billingId = #{billingId}
    </update>

    <select id="selectPaidById" resultType="java.lang.Double">
        select paidAmount
        from Billing
        where billingId = #{billingId}
    </select>

    <update id="softDeleteUser" parameterType="com.example.hiringagency.domain.entity.Users">
        update Users
        set isDeleted = 1
        where userId = #{userId}
    </update>

    <delete id="withdraw" parameterType="com.example.hiringagency.domain.entity.ServiceEntries">
        delete from ServiceEntries
        where serviceEntryId = #{serviceEntryId}
    </delete>

    <select id="selectRequestByCt" resultType="com.example.hiringagency.domain.entity.CareRequests">
        select *
        from CareRequests
        where careTakerId = #{careTakerId}
    </select>

    <update id="updateHour" parameterType="com.example.hiringagency.domain.entity.ServiceEntries">
        update ServiceEntries
        set startTime = #{startTime}, endTime = #{endTime}
        where serviceEntryId = #{serviceEntryId}
    </update>

    <update id="terminate" parameterType="com.example.hiringagency.domain.entity.CareRequests">
        update CareRequests
        set status = 2
        where careRequestId = #{careRequestId}
    </update>

    <select id="selectHPAccountById" resultType="com.example.hiringagency.domain.entity.HPAccount">
        select *
        from HPAccount
        where hpId = #{userId}
    </select>

    <insert id="addCTPayment" parameterType="com.example.hiringagency.domain.entity.CTPayment">
        insert into CTPayment(`amount`, `date`, `billingId`)
        values (#{amount}, #{date}, #{billingId})
    </insert>

    <update id="payHP" parameterType="com.example.hiringagency.domain.entity.HPAccount">
        update HPAccount
        set amountPaid = #{sum}
        where hpId = #{hpId}
    </update>

    <insert id="addHPPayment" parameterType="com.example.hiringagency.domain.entity.HPPayment">
        insert into HPPayment(`amount`, `date`, `hpAccountId`)
        values (#{amount}, #{date}, #{hpAccountId})
    </insert>

    <select id="selectWithdrawRequests" resultType="com.example.hiringagency.domain.entity.CareRequests">
        select *
        from CareRequests
        where status = 1
    </select>

    <select id="selectTerminateRequests" resultType="com.example.hiringagency.domain.entity.CareRequests">
        select *
        from CareRequests
        where status = 2
    </select>

    <select id="selectHPAccount" resultType="com.example.hiringagency.domain.model.HPAccountInfo">
        select hpa.hpAccountId, hpa.hpId, u.firstName, u.lastName, hpa.amountPaid, hpa.amountYetToPay
        from HPAccount hpa left join Users u on hpa.hpId = u.userId
        where u.isDeleted = false
    </select>
</mapper>
