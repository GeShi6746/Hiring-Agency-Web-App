<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "com.example.hiringagency.DAO.CTMapper">

    <insert id="CTRegister" parameterType="com.example.hiringagency.domain.entity.CareTakerRegistration">
        insert into CareTakerRegistration(`firstName`, `lastName`,`postalAddress`, `phoneNumber`, `email`,`active`)
        values (#{firstName}, #{lastName}, #{postalAddress}, #{phoneNumber}, #{email}, 1)
    </insert>

    <select id="selectAllCTs" resultType="com.example.hiringagency.domain.entity.CareTakerRegistration">
        select *
        from CareTakerRegistration
        where active = 1
    </select>

    <insert id="addRequest" parameterType="com.example.hiringagency.domain.entity.CareRequests">
        insert into CareRequests(FirstName, LastName, Gender, DateOfBirth, ServiceAddress, PatientPhone, PatientEmail, WeekDay, StartTime, EndTime, TotalDays, GenderSpecific, LowerAgeLimit, UpperAgeLimit, FlexibleHoursFlag, FlexibleHoursPerDay, CareTakerID, ServiceType, status)
        values (#{firstName}, #{lastName}, #{gender}, #{dateOfBirth}, #{serviceAddress}, #{patientPhone}, #{patientEmail},
                                 #{weekDay}, #{startTime}, #{endTime}, #{totalDays}, #{genderSpecific}, #{lowerAgeLimit},
                                 #{upperAgeLimit}, #{flexibleHoursFlag}, #{flexibleHoursPerDay}, #{careTakerId}, #{serviceType}, 0)
    </insert>

    <select id="selectRequests" resultType="com.example.hiringagency.domain.entity.CareRequests">
        select *
        from CareRequests
        where careTakerId = #{careTakerId}
    </select>

    <select id="selectRequestsById" resultType="com.example.hiringagency.domain.entity.CareRequests">
        select *
        from CareRequests
        where careRequestId = #{careRequestId}
    </select>

    <select id="selectServiceEntries" resultType="com.example.hiringagency.domain.entity.ServiceEntries">
        select *
        from ServiceEntries
        where careRequestId = #{careRequestId}
    </select>

    <select id="selectEntriesDetails" resultType="com.example.hiringagency.domain.model.EntriesDetails">
        select hja.FirstName, hja.LastName, se.Date, se.StartTime, se.EndTime, se.Status
        from ServiceEntries se left join HealthcareJobApplication hja on se.HPID = hja.UserID
        where se.careRequestId = #{careRequestId}
    </select>

    <insert id="addEntries" parameterType="com.example.hiringagency.domain.entity.ServiceEntries">
        insert into ServiceEntries(Date, StartTime, EndTime, careRequestId)
        values (#{date}, #{startTime}, #{endTime}, #{careRequestId})
    </insert>

    <select id="selectBilling" resultType="com.example.hiringagency.domain.model.BillingAccountInfo">
        select CR.FirstName "patientFirstName", CR.LastName "patientLastName", B.hourlyRate, B.paidAmount, B.amountYetToPay, B.BillingID, B.ServiceID, B.CareRequestID
        from Billing B left join CareRequests CR on CR.CareRequestID = B.CareRequestID
        where B.careTakerId = #{careTakerId}
    </select>

    <update id="pay" parameterType="com.example.hiringagency.domain.entity.Billing">
        update Billing
        set paidAmount = paidAmount + #{amount}
        where billingId = #{billingId}
    </update>

    <select id="selectMaxId" resultType="java.lang.Long">
        select MAX(careRequestId)
        from CareRequests
    </select>

    <select id="selectCompleteEntriesByRequest" resultType="com.example.hiringagency.domain.model.BillingDetails">
        select cr.firstName "patientFirstName", cr.lastName "patientLastName", hja.firstName "hpFirstName", hja.lastName "hpLastName", se.date, se.startTime, se.endTime
        from ServiceEntries se left join CareRequests cr on cr.careRequestId = se.careRequestId left join HealthcareJobApplication hja on se.hpId = hja.userId
        where se.careRequestId = #{careRequestId} and se.completedFlag = 1
    </select>

    <select id="selectRateByRequest" resultType="java.lang.Double">
        select hourlyRate
        from Billing
        where careRequestId = #{careRequestId}
    </select>

    <update id="withdraw" parameterType="com.example.hiringagency.domain.entity.CareRequests">
        update CareRequests
        set status = 1
        where careRequestId = #{careRequestId}
    </update>

    <select id="selectCTPaymentById" resultType="com.example.hiringagency.domain.entity.CTPayment">
        select *
        from CtPayment
        where billingId = #{billingId}
    </select>

    <select id="selectBillingByRequest" resultType="com.example.hiringagency.domain.entity.Billing">
        select *
        from Billing
        where careRequestId = #{careRequestId}
    </select>
</mapper>